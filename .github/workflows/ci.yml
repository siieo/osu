on: [push, pull_request]
name: Continuous Integration
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  inspect-code:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Restore Packages
        run: dotnet restore osu.Desktop.slnf

      - name: Restore inspectcode cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/inspectcode
          key: inspectcode-${{ hashFiles('.config/dotnet-tools.json', '.github/workflows/ci.yml', 'osu.sln*', 'osu*.slnf', '.editorconfig', '.globalconfig', 'CodeAnalysis/*', '**/*.csproj', '**/*.props') }}

      - name: Dotnet code style
        run: dotnet build -c Debug -warnaserror osu.Desktop.slnf -p:EnforceCodeStyleInBuild=true

      - name: CodeFileSanity
        run: |
          # TODO: Add ignore filters and GitHub Workflow Command Reporting in CFS. That way we don't have to do this workaround.
          # FIXME: Suppress warnings from templates project
          exit_code=0
          while read -r line; do
            if [[ ! -z "$line" ]]; then
              echo "::error::$line"
              exit_code=1
            fi
          done <<< $(dotnet codefilesanity)
          exit $exit_code

      - name: InspectCode
        run: dotnet jb inspectcode $(pwd)/osu.Desktop.slnf --no-build --output="inspectcodereport.xml" --caches-home="inspectcode" --verbosity=WARN

      - name: NVika
        run: dotnet nvika parsereport "${{github.workspace}}/inspectcodereport.xml" --treatwarningsaserrors


  build-only-ios:
  workflow_dispatch:
    name: Build only (iOS)
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install .NET Workloads
        run: dotnet workload install maui-ios

      - name: Build
        run: dotnet build -c Debug osu.iOS
